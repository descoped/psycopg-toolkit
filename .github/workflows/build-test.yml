name: Build and Test

on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.12', '3.13']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Install dependencies
      run: |
        uv sync --all-groups
    
    - name: Run linting
      run: |
        uv run ruff check src tests
    
    - name: Run all tests (except performance) with coverage
      run: |
        # The default pytest configuration excludes performance tests
        uv run pytest -v --tb=short --cov=src/psycopg_toolkit --cov-report=xml --cov-report=term
    
    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.13'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: descoped/psycopg-toolkit
        files: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Build package
      run: |
        uv build
        
    - name: Verify package
      run: |
        # Check that the wheel was built
        ls -la dist/
        # Verify the package structure
        uv run python -m zipfile -l dist/*.whl | head -20
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 7